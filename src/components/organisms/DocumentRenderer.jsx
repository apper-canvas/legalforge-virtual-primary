import { motion } from 'framer-motion';
import ApperIcon from '@/components/ApperIcon';
import { format } from 'date-fns';

const DocumentRenderer = ({ 
  document, 
  showSignatures = false,
  className = "" 
}) => {
  if (!document?.content) {
    return (
      <div className="bg-white rounded-lg border border-surface-200 p-8 text-center">
        <ApperIcon name="FileText" className="w-12 h-12 text-surface-300 mx-auto mb-4" />
        <p className="text-surface-500">No document content available</p>
      </div>
    );
  }

  const { title, sections } = document.content;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className={`bg-white legal-document ${className}`}
    >
      {/* Document Header */}
      <div className="mb-8 pb-6 border-b-2 border-surface-800">
        <h1 className="text-center font-bold text-2xl mb-4">
          {title}
        </h1>
        
        <div className="text-center text-sm text-surface-600">
          <p>Document ID: {document.id}</p>
          <p>Created: {format(new Date(document.createdAt), 'MMMM dd, yyyy')}</p>
          <p>Jurisdiction: {document.jurisdiction}</p>
        </div>
      </div>

      {/* Document Sections */}
      <div className="space-y-6">
        {sections?.map((section, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
            className="clause"
          >
            <h2 className="text-lg font-bold mb-3 uppercase tracking-wide">
              {section.title}
            </h2>
            <div className="text-justify leading-relaxed">
              {section.content.split('\n').map((paragraph, pIndex) => (
                <p key={pIndex} className="mb-3">
                  {paragraph}
                </p>
              ))}
            </div>
          </motion.div>
        ))}
      </div>

      {/* Signatures Section */}
      {showSignatures && document.signatures && document.signatures.length > 0 && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
          className="mt-12 pt-8 border-t-2 border-surface-800"
        >
          <h2 className="text-lg font-bold mb-6 uppercase tracking-wide">
            SIGNATURES
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {document.signatures.map((signature, index) => (
              <div key={index} className="space-y-3">
                <div className="border-b border-surface-800 pb-2">
                  <p className="font-semibold">{signature.name}</p>
                  <p className="text-sm text-surface-600">{signature.role}</p>
                </div>
                
                {signature.signedAt && (
                  <div className="text-sm text-surface-600">
                    <p>Signed: {format(new Date(signature.signedAt), 'MMMM dd, yyyy \'at\' h:mm a')}</p>
                    <p>Email: {signature.email}</p>
                  </div>
                )}
                
                <div className="signature-line">
                  <p className="text-xs text-surface-500 mt-2">Signature</p>
                </div>
              </div>
            ))}
          </div>
        </motion.div>
      )}

      {/* Footer */}
      <div className="mt-12 pt-6 border-t border-surface-300 text-center text-xs text-surface-500">
        <p>This document was generated by LegalForge AI</p>
        <p>For legal questions, please consult with a qualified attorney</p>
      </div>
    </motion.div>
  );
};

export default DocumentRenderer;